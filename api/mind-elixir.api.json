{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.39.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "mind-elixir!",
  "docComment": "",
  "name": "mind-elixir",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "mind-elixir!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!Arrow:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Arrow = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    label: string;\n    from: "
            },
            {
              "kind": "Reference",
              "text": "Uid",
              "canonicalReference": "mind-elixir!~Uid:type"
            },
            {
              "kind": "Content",
              "text": ";\n    to: "
            },
            {
              "kind": "Reference",
              "text": "Uid",
              "canonicalReference": "mind-elixir!~Uid:type"
            },
            {
              "kind": "Content",
              "text": ";\n    delta1: {\n        x: number;\n        y: number;\n    };\n    delta2: {\n        x: number;\n        y: number;\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/arrow.d.ts",
          "releaseTag": "Public",
          "name": "Arrow",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mind-elixir!Children:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Children extends "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/types/types/dom.d.ts",
          "releaseTag": "Public",
          "name": "Children",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Children#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLCollection",
                  "canonicalReference": "!HTMLCollection:interface"
                },
                {
                  "kind": "Content",
                  "text": " & "
                },
                {
                  "kind": "Reference",
                  "text": "Wrapper",
                  "canonicalReference": "mind-elixir!Wrapper:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Children#firstChild:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "firstChild: "
                },
                {
                  "kind": "Reference",
                  "text": "Wrapper",
                  "canonicalReference": "mind-elixir!Wrapper:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "firstChild",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Children#parentElement:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentElement: "
                },
                {
                  "kind": "Reference",
                  "text": "Wrapper",
                  "canonicalReference": "mind-elixir!Wrapper:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentElement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Children#parentNode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentNode: "
                },
                {
                  "kind": "Reference",
                  "text": "Wrapper",
                  "canonicalReference": "mind-elixir!Wrapper:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentNode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Children#previousSibling:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousSibling: "
                },
                {
                  "kind": "Reference",
                  "text": "Parent",
                  "canonicalReference": "mind-elixir!Parent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "previousSibling",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!CustomArrow:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CustomArrow = "
            },
            {
              "kind": "Reference",
              "text": "SVGPathElement",
              "canonicalReference": "!SVGPathElement:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/types/dom.d.ts",
          "releaseTag": "Public",
          "name": "CustomArrow",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!CustomLine:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CustomLine = "
            },
            {
              "kind": "Reference",
              "text": "SVGPathElement",
              "canonicalReference": "!SVGPathElement:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/types/dom.d.ts",
          "releaseTag": "Public",
          "name": "CustomLine",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mind-elixir!CustomSvg:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CustomSvg extends "
            },
            {
              "kind": "Reference",
              "text": "SVGGElement",
              "canonicalReference": "!SVGGElement:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/types/types/dom.d.ts",
          "releaseTag": "Public",
          "name": "CustomSvg",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!CustomSvg#arrowObj:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrowObj: "
                },
                {
                  "kind": "Reference",
                  "text": "Arrow",
                  "canonicalReference": "mind-elixir!Arrow:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arrowObj",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!CustomSvg#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLCollection",
                  "canonicalReference": "!HTMLCollection:interface"
                },
                {
                  "kind": "Content",
                  "text": " & ["
                },
                {
                  "kind": "Reference",
                  "text": "CustomLine",
                  "canonicalReference": "mind-elixir!CustomLine:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "CustomArrow",
                  "canonicalReference": "mind-elixir!CustomArrow:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "SVGTextElement",
                  "canonicalReference": "!SVGTextElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mind-elixir!Expander:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Expander extends "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/types/types/dom.d.ts",
          "releaseTag": "Public",
          "name": "Expander",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Expander#expanded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expanded?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "expanded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Expander#parentElement:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentElement: "
                },
                {
                  "kind": "Reference",
                  "text": "Parent",
                  "canonicalReference": "mind-elixir!Parent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentElement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Expander#parentNode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentNode: "
                },
                {
                  "kind": "Reference",
                  "text": "Parent",
                  "canonicalReference": "mind-elixir!Parent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentNode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Expander#previousSibling:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousSibling: "
                },
                {
                  "kind": "Reference",
                  "text": "Topic",
                  "canonicalReference": "mind-elixir!Topic:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "previousSibling",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!MainLineParams:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MainLineParams = "
            },
            {
              "kind": "Content",
              "text": "{\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n    direction: 'lhs' | 'rhs';\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/utils/generateBranch.d.ts",
          "releaseTag": "Public",
          "name": "MainLineParams",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "mind-elixir!methods:var",
          "docComment": "/**\n * Methods that mind-elixir instance can use\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "methods: "
            },
            {
              "kind": "Content",
              "text": "{\n    init(this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", data: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirData",
              "canonicalReference": "mind-elixir!MindElixirData:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined;\n    exportSvg: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", noForeignObject?: boolean, injectCss?: string | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Blob",
              "canonicalReference": "!Blob:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    exportPng: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", noForeignObject?: boolean, injectCss?: string | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Blob",
              "canonicalReference": "!Blob:interface"
            },
            {
              "kind": "Content",
              "text": " | null>;\n    createSummary: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    removeSummary: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", id: string) => void;\n    selectSummary: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el: "
            },
            {
              "kind": "Reference",
              "text": "summary.SummarySvgGroup",
              "canonicalReference": "mind-elixir!SummarySvgGroup:type"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    unselectSummary: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    renderSummary: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    editSummary: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el: "
            },
            {
              "kind": "Reference",
              "text": "summary.SummarySvgGroup",
              "canonicalReference": "mind-elixir!SummarySvgGroup:type"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    renderArrow(this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": "): void;\n    editArrowLabel(this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "CustomSvg",
              "canonicalReference": "mind-elixir!CustomSvg:interface"
            },
            {
              "kind": "Content",
              "text": "): void;\n    tidyArrow(this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": "): void;\n    createArrow: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", from: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ", to: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    removeArrow: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", linkSvg?: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "CustomSvg",
              "canonicalReference": "mind-elixir!CustomSvg:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => void;\n    selectArrow: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", link: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "CustomSvg",
              "canonicalReference": "mind-elixir!CustomSvg:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    unselectArrow: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    mainToSub : (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", tpc: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    reshapeNode: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", tpc: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ", patchData: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    insertSibling: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", type: \"before\" | \"after\", el?: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined, node?: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": " | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    insertParent: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el?: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined, node?: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": " | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    addChild: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el?: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined, node?: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": " | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    copyNode: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", node: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ", to: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    copyNodes: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", tpcs: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": "[], to: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    moveUpNode: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el?: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    moveDownNode: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el?: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    removeNode: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el?: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    removeNodes: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", tpcs: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": "[]) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    moveNodeIn: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", from: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": "[], to: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    moveNodeBefore: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", from: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": "[], to: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    moveNodeAfter: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", from: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": "[], to: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    beginEdit: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el?: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    setNodeTopic: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ", topic: string) => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>;\n    selectNode: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", targetElement: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ", isNewNode?: boolean | undefined, e?: "
            },
            {
              "kind": "Reference",
              "text": "MouseEvent",
              "canonicalReference": "!MouseEvent:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => void;\n    unselectNode: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    selectNodes: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", tpc: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": "[]) => void;\n    unselectNodes: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    clearSelection: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    getDataString: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => string;\n    getData: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "MindElixirData",
              "canonicalReference": "mind-elixir!MindElixirData:type"
            },
            {
              "kind": "Content",
              "text": ";\n    getDataMd: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => string;\n    enableEdit: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    disableEdit: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    scale: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", scaleVal: number) => void;\n    toCenter: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    install: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", plugin: (instance: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void) => void;\n    focusNode: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    cancelFocus: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    initLeft: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    initRight: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    initSide: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    setLocale: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", locale: string) => void;\n    expandNode: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ", isExpand?: boolean | undefined) => void;\n    refresh: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", data?: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirData",
              "canonicalReference": "mind-elixir!MindElixirData:type"
            },
            {
              "kind": "Content",
              "text": " | undefined) => void;\n    getObjById: (id: string, data: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": ") => import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": " | null;\n    generateNewObj: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "NodeObjExport",
              "canonicalReference": "mind-elixir!NodeObjExport:type"
            },
            {
              "kind": "Content",
              "text": ";\n    layout: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    linkDiv: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", mainNode?: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Wrapper",
              "canonicalReference": "mind-elixir!Wrapper:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => void;\n    editTopic: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", el: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    createWrapper: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", nodeObj: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": ", omitChildren?: boolean | undefined) => {\n        grp: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Wrapper",
              "canonicalReference": "mind-elixir!Wrapper:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        top: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Parent",
              "canonicalReference": "mind-elixir!Parent:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        tpc: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    createParent: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", nodeObj: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": ") => {\n        p: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Parent",
              "canonicalReference": "mind-elixir!Parent:interface"
            },
            {
              "kind": "Content",
              "text": ";\n        tpc: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    };\n    createChildren: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", wrappers: import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Wrapper",
              "canonicalReference": "mind-elixir!Wrapper:interface"
            },
            {
              "kind": "Content",
              "text": "[]) => import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Children",
              "canonicalReference": "mind-elixir!Children:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    createTopic: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", nodeObj: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": ") => import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    findEle: (id: string, instance?: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": " | undefined) => import(\"./index\")."
            },
            {
              "kind": "Reference",
              "text": "Topic",
              "canonicalReference": "mind-elixir!Topic:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    changeTheme: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", theme: import(\"./types\")."
            },
            {
              "kind": "Reference",
              "text": "Theme",
              "canonicalReference": "mind-elixir!Theme:type"
            },
            {
              "kind": "Content",
              "text": ", shouldRefresh?: boolean) => void;\n}"
            }
          ],
          "fileUrlPath": "dist/types/methods.d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "methods",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 286
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!MindElixirData:type",
          "docComment": "/**\n * The exported data of MindElixir\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MindElixirData = "
            },
            {
              "kind": "Content",
              "text": "{\n    nodeData: "
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": ";\n    arrows?: "
            },
            {
              "kind": "Reference",
              "text": "Arrow",
              "canonicalReference": "mind-elixir!Arrow:type"
            },
            {
              "kind": "Content",
              "text": "[];\n    summaries?: "
            },
            {
              "kind": "Reference",
              "text": "Summary",
              "canonicalReference": "mind-elixir!Summary:type"
            },
            {
              "kind": "Content",
              "text": "[];\n    direction?: number;\n    theme?: "
            },
            {
              "kind": "Reference",
              "text": "Theme",
              "canonicalReference": "mind-elixir!Theme:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/types/index.d.ts",
          "releaseTag": "Public",
          "name": "MindElixirData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mind-elixir!MindElixirInstance:interface",
          "docComment": "/**\n * The MindElixir instance\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MindElixirInstance extends "
            },
            {
              "kind": "Reference",
              "text": "MindElixirMethods",
              "canonicalReference": "mind-elixir!MindElixirMethods:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/types/types/index.d.ts",
          "releaseTag": "Public",
          "name": "MindElixirInstance",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#allowUndo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allowUndo: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "allowUndo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#arrows:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arrows: "
                },
                {
                  "kind": "Reference",
                  "text": "Arrow",
                  "canonicalReference": "mind-elixir!Arrow:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "arrows",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#before:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "before: "
                },
                {
                  "kind": "Reference",
                  "text": "Before",
                  "canonicalReference": "mind-elixir!~Before:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "before",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#bus:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bus: "
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<typeof "
                },
                {
                  "kind": "Reference",
                  "text": "Bus.create",
                  "canonicalReference": "mind-elixir!~__type#create:member"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EventMap",
                  "canonicalReference": "mind-elixir!~EventMap:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#container:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "container: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "container",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#contextMenu:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contextMenu: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contextMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#contextMenuOption:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contextMenuOption: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contextMenuOption",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#currentArrow:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentArrow: "
                },
                {
                  "kind": "Reference",
                  "text": "CustomSvg",
                  "canonicalReference": "mind-elixir!CustomSvg:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentArrow",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#currentNode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentNode: "
                },
                {
                  "kind": "Reference",
                  "text": "Topic",
                  "canonicalReference": "mind-elixir!Topic:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentNode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#currentNodes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentNodes: "
                },
                {
                  "kind": "Reference",
                  "text": "Topic",
                  "canonicalReference": "mind-elixir!Topic:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentNodes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#currentSummary:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentSummary: "
                },
                {
                  "kind": "Reference",
                  "text": "SummarySvgGroup",
                  "canonicalReference": "mind-elixir!SummarySvgGroup:type"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentSummary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#direction:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "direction: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "direction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#draggable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "draggable: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "draggable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#editable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "editable: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "editable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#generateMainBranch:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateMainBranch: "
                },
                {
                  "kind": "Content",
                  "text": "(params: "
                },
                {
                  "kind": "Reference",
                  "text": "MainLineParams",
                  "canonicalReference": "mind-elixir!MainLineParams:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "PathString",
                  "canonicalReference": "mind-elixir!~PathString:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "generateMainBranch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#generateSubBranch:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "generateSubBranch: "
                },
                {
                  "kind": "Content",
                  "text": "(params: "
                },
                {
                  "kind": "Reference",
                  "text": "SubLineParams",
                  "canonicalReference": "mind-elixir!SubLineParams:type"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "PathString",
                  "canonicalReference": "mind-elixir!~PathString:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "generateSubBranch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#history:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "history: "
                },
                {
                  "kind": "Reference",
                  "text": "Operation",
                  "canonicalReference": "mind-elixir!~Operation:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "history",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#isFocusMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isFocusMode: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isFocusMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#keypress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keypress: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "keypress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#line1:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "line1: "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "line1",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#line2:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "line2: "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "line2",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#lines:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lines: "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#linkController:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linkController: "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "linkController",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#linkSvgGroup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linkSvgGroup: "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "linkSvgGroup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#locale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locale: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "locale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#mainBranchStyle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mainBranchStyle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mainBranchStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#map:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "map: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "map",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#mindElixirBox:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mindElixirBox: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mindElixirBox",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#mobileMenu:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mobileMenu: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mobileMenu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#mouseSelectionButton:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mouseSelectionButton: "
                },
                {
                  "kind": "Content",
                  "text": "0 | 2"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mouseSelectionButton",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#newTopicName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "newTopicName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "newTopicName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#nodeData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nodeData: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeObj",
                  "canonicalReference": "mind-elixir!NodeObj:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nodeData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#nodeDataBackup:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nodeDataBackup: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeObj",
                  "canonicalReference": "mind-elixir!NodeObj:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nodeDataBackup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#nodes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nodes: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nodes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#overflowHidden:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overflowHidden: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "overflowHidden",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#P2:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "P2: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "P2",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#P3:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "P3: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "P3",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#redo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redo: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "redo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#root:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "root: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#scaleVal:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scaleVal: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scaleVal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#selection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selection: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionArea",
                  "canonicalReference": "@viselect/vanilla!default:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#subBranchStyle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subBranchStyle: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "subBranchStyle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#summaries:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "summaries: "
                },
                {
                  "kind": "Reference",
                  "text": "Summary",
                  "canonicalReference": "mind-elixir!Summary:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "summaries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#summarySvg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "summarySvg: "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "summarySvg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#tempDirection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tempDirection: "
                },
                {
                  "kind": "Content",
                  "text": "number | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tempDirection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#theme:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "theme: "
                },
                {
                  "kind": "Reference",
                  "text": "Theme",
                  "canonicalReference": "mind-elixir!Theme:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "theme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#toolBar:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toolBar: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "toolBar",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#undo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "undo: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "undo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#userTheme:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userTheme?: "
                },
                {
                  "kind": "Reference",
                  "text": "Theme",
                  "canonicalReference": "mind-elixir!Theme:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userTheme",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!MindElixirInstance#waitCopy:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitCopy: "
                },
                {
                  "kind": "Reference",
                  "text": "Topic",
                  "canonicalReference": "mind-elixir!Topic:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "waitCopy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!MindElixirMethods:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MindElixirMethods = "
            },
            {
              "kind": "Content",
              "text": "typeof "
            },
            {
              "kind": "Reference",
              "text": "methods",
              "canonicalReference": "mind-elixir!methods:var"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/methods.d.ts",
          "releaseTag": "Public",
          "name": "MindElixirMethods",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!NodeObj:type",
          "docComment": "/**\n * MindElixir node object\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeObj = "
            },
            {
              "kind": "Content",
              "text": "{\n    topic: string;\n    id: "
            },
            {
              "kind": "Reference",
              "text": "Uid",
              "canonicalReference": "mind-elixir!~Uid:type"
            },
            {
              "kind": "Content",
              "text": ";\n    style?: {\n        fontSize?: string;\n        color?: string;\n        background?: string;\n        fontWeight?: string;\n    };\n    children?: "
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": "[];\n    tags?: string[];\n    icons?: string[];\n    hyperLink?: string;\n    expanded?: boolean;\n    direction?: number;\n    root?: boolean;\n    image?: {\n        url: string;\n        width: number;\n        height: number;\n    };\n    branchColor?: string;\n    parent?: "
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dangerouslySetInnerHTML?: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/types/index.d.ts",
          "releaseTag": "Public",
          "name": "NodeObj",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!NodeObjExport:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type NodeObjExport = "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "NodeObj",
              "canonicalReference": "mind-elixir!NodeObj:type"
            },
            {
              "kind": "Content",
              "text": ", 'parent'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/types/index.d.ts",
          "releaseTag": "Public",
          "name": "NodeObjExport",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!Options:type",
          "docComment": "/**\n * The MindElixir options\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Options = "
            },
            {
              "kind": "Content",
              "text": "{\n    el: string | "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    direction?: number;\n    locale?: string;\n    draggable?: boolean;\n    editable?: boolean;\n    contextMenu?: boolean;\n    contextMenuOption?: any;\n    toolBar?: boolean;\n    keypress?: boolean;\n    mouseSelectionButton?: 0 | 2;\n    before?: "
            },
            {
              "kind": "Reference",
              "text": "Before",
              "canonicalReference": "mind-elixir!~Before:type"
            },
            {
              "kind": "Content",
              "text": ";\n    newTopicName?: string;\n    allowUndo?: boolean;\n    overflowHidden?: boolean;\n    generateMainBranch?: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "MainLineParams",
              "canonicalReference": "mind-elixir!MainLineParams:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "PathString",
              "canonicalReference": "mind-elixir!~PathString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    generateSubBranch?: (this: "
            },
            {
              "kind": "Reference",
              "text": "MindElixirInstance",
              "canonicalReference": "mind-elixir!MindElixirInstance:interface"
            },
            {
              "kind": "Content",
              "text": ", params: "
            },
            {
              "kind": "Reference",
              "text": "SubLineParams",
              "canonicalReference": "mind-elixir!SubLineParams:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "PathString",
              "canonicalReference": "mind-elixir!~PathString:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mobileMenu?: boolean;\n    theme?: "
            },
            {
              "kind": "Reference",
              "text": "Theme",
              "canonicalReference": "mind-elixir!Theme:type"
            },
            {
              "kind": "Content",
              "text": ";\n    nodeMenu?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/types/index.d.ts",
          "releaseTag": "Public",
          "name": "Options",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 20
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mind-elixir!Parent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Parent extends "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/types/types/dom.d.ts",
          "releaseTag": "Public",
          "name": "Parent",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Parent#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLCollection",
                  "canonicalReference": "!HTMLCollection:interface"
                },
                {
                  "kind": "Content",
                  "text": " & ["
                },
                {
                  "kind": "Reference",
                  "text": "Topic",
                  "canonicalReference": "mind-elixir!Topic:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Expander",
                  "canonicalReference": "mind-elixir!Expander:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Parent#firstChild:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "firstChild: "
                },
                {
                  "kind": "Reference",
                  "text": "Topic",
                  "canonicalReference": "mind-elixir!Topic:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "firstChild",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Parent#nextSibling:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nextSibling: "
                },
                {
                  "kind": "Reference",
                  "text": "Children",
                  "canonicalReference": "mind-elixir!Children:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nextSibling",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Parent#offsetParent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offsetParent: "
                },
                {
                  "kind": "Reference",
                  "text": "Wrapper",
                  "canonicalReference": "mind-elixir!Wrapper:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "offsetParent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Parent#parentElement:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentElement: "
                },
                {
                  "kind": "Reference",
                  "text": "Wrapper",
                  "canonicalReference": "mind-elixir!Wrapper:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentElement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Parent#parentNode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentNode: "
                },
                {
                  "kind": "Reference",
                  "text": "Wrapper",
                  "canonicalReference": "mind-elixir!Wrapper:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentNode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!SubLineParams:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SubLineParams = "
            },
            {
              "kind": "Content",
              "text": "{\n    pT: number;\n    pL: number;\n    pW: number;\n    pH: number;\n    cT: number;\n    cL: number;\n    cW: number;\n    cH: number;\n    direction: 'lhs' | 'rhs';\n    isFirst: boolean | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/utils/generateBranch.d.ts",
          "releaseTag": "Public",
          "name": "SubLineParams",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!Summary:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Summary = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    text: string;\n    parent: string;\n    start: number;\n    end: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/summary.d.ts",
          "releaseTag": "Public",
          "name": "Summary",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!SummarySvgGroup:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SummarySvgGroup = "
            },
            {
              "kind": "Reference",
              "text": "SVGGElement",
              "canonicalReference": "!SVGGElement:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    children: ["
            },
            {
              "kind": "Reference",
              "text": "SVGPathElement",
              "canonicalReference": "!SVGPathElement:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "SVGTextElement",
              "canonicalReference": "!SVGTextElement:interface"
            },
            {
              "kind": "Content",
              "text": "];\n    summaryObj: "
            },
            {
              "kind": "Reference",
              "text": "Summary",
              "canonicalReference": "mind-elixir!Summary:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/summary.d.ts",
          "releaseTag": "Public",
          "name": "SummarySvgGroup",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "mind-elixir!Theme:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type Theme = "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    palette: string[];\n    cssVar: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n        '--main-color': string;\n        '--main-bgcolor': string;\n        '--color': string;\n        '--bgcolor': string;\n        '--selected': string;\n        '--panel-color': string;\n        '--panel-bgcolor': string;\n        '--root-color': string;\n        '--root-bgcolor': string;\n        '--root-radius': string;\n        '--main-radius': string;\n        '--topic-padding': string;\n        '--panel-border-color': string;\n    }>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "dist/types/types/index.d.ts",
          "releaseTag": "Public",
          "name": "Theme",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "mind-elixir!Topic:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Topic extends "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/types/types/dom.d.ts",
          "releaseTag": "Public",
          "name": "Topic",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Topic#expander:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expander?: "
                },
                {
                  "kind": "Reference",
                  "text": "Expander",
                  "canonicalReference": "mind-elixir!Expander:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "expander",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Topic#icons:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "icons?: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "icons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Topic#image:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "image?: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLImageElement",
                  "canonicalReference": "!HTMLImageElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "image",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Topic#linkContainer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "linkContainer?: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "linkContainer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Topic#nodeObj:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nodeObj: "
                },
                {
                  "kind": "Reference",
                  "text": "NodeObj",
                  "canonicalReference": "mind-elixir!NodeObj:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nodeObj",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Topic#offsetParent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offsetParent: "
                },
                {
                  "kind": "Reference",
                  "text": "Parent",
                  "canonicalReference": "mind-elixir!Parent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "offsetParent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Topic#parentElement:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentElement: "
                },
                {
                  "kind": "Reference",
                  "text": "Parent",
                  "canonicalReference": "mind-elixir!Parent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentElement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Topic#parentNode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentNode: "
                },
                {
                  "kind": "Reference",
                  "text": "Parent",
                  "canonicalReference": "mind-elixir!Parent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentNode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Topic#tags:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tags?: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLDivElement",
                  "canonicalReference": "!HTMLDivElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tags",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Topic#text:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "text: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLSpanElement",
                  "canonicalReference": "!HTMLSpanElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "text",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "mind-elixir!Wrapper:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Wrapper extends "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "dist/types/types/dom.d.ts",
          "releaseTag": "Public",
          "name": "Wrapper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Wrapper#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLCollection",
                  "canonicalReference": "!HTMLCollection:interface"
                },
                {
                  "kind": "Content",
                  "text": " & ["
                },
                {
                  "kind": "Reference",
                  "text": "Parent",
                  "canonicalReference": "mind-elixir!Parent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Children",
                  "canonicalReference": "mind-elixir!Children:interface"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Wrapper#firstChild:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "firstChild: "
                },
                {
                  "kind": "Reference",
                  "text": "Parent",
                  "canonicalReference": "mind-elixir!Parent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "firstChild",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Wrapper#nextSibling:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nextSibling: "
                },
                {
                  "kind": "Reference",
                  "text": "Wrapper",
                  "canonicalReference": "mind-elixir!Wrapper:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nextSibling",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Wrapper#offsetParent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offsetParent: "
                },
                {
                  "kind": "Reference",
                  "text": "Wrapper",
                  "canonicalReference": "mind-elixir!Wrapper:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "offsetParent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Wrapper#parentElement:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentElement: "
                },
                {
                  "kind": "Reference",
                  "text": "Children",
                  "canonicalReference": "mind-elixir!Children:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentElement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Wrapper#parentNode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parentNode: "
                },
                {
                  "kind": "Reference",
                  "text": "Children",
                  "canonicalReference": "mind-elixir!Children:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parentNode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "mind-elixir!Wrapper#previousSibling:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousSibling: "
                },
                {
                  "kind": "Reference",
                  "text": "Wrapper",
                  "canonicalReference": "mind-elixir!Wrapper:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "previousSibling",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            }
          ]
        }
      ]
    }
  ]
}
